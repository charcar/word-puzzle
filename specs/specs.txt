## Plain English specs

## Function accepts string argument, replaces "a" with dash, outputs result
## Function accepts string argument, replaces all values with dash, outputs result



// TEST 1, try to loop through charArray and compare to HashMap
// HashMap<Character, String> vowelToDash = new HashMap<Character, String>();
//     vowelToDash.put('a', "-");
//     vowelToDash.put('e', "-");
//     vowelToDash.put('i', "-");
//     vowelToDash.put('o', "-");
//     vowelToDash.put('u', "-");

// TEST 2, make two arrays of Strings, test equality, still running into issue with nested for loops that is completely throwing off output.
// String[] vowels = {"a", "e", "i", "o", "u"};

// TEST 3, how to refactor? I know that I could have done this entire challenge using String operators and a regex statement, however I wanted to use a for loop. I know that the long if/else conditional can be refactored, I'm just not sure how to go about.. I thought I could have done something with comparing the two (first char, then string) arrays.. but then I settled on this approach b/c I couldn't figure out how to get out of nested for loops..
